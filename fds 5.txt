12.16 2:09 PM
Practical 5

# Function for Selection Sort
def selection_sort(arr):
    n = len(arr)
    for i in range(n):
        min_index = i
        for j in range(i + 1, n):
            if arr[j] < arr[min_index]:
                min_index = j
        arr[i], arr[min_index] = arr[min_index], arr[i]

# Function for Bubble Sort
def bubble_sort(arr):
    n = len(arr)
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

# Function to display top 5 scores
def display_top_five(arr):
    # Sort the array in descending order
    arr.sort(reverse=True)
    # Display the top 5 scores
    print("Top 5 scores:")
    for i in range(min(5, len(arr))):  # In case there are less than 5 students
        print(arr[i])

# Menu-driven program
def main():
    # Input percentages from the user
    percentages = []
    n = int(input("Enter the number of students: "))
    for i in range(n):
        percentage = float(input(f"Enter percentage for student {i + 1}: "))
        percentages.append(percentage)

    # Menu for sorting options
    while True:
        print("\nChoose a sorting method:")
        print("1. Selection Sort")
        print("2. Bubble Sort")
        print("3. Exit")
        choice = int(input("Enter your choice: "))

        if choice == 1:
            sorted_arr = list(percentages)  # Create a copy of percentages using list()
            selection_sort(sorted_arr)
            print("Percentages sorted using Selection Sort:", sorted_arr)
            display_top_five(sorted_arr)
        elif choice == 2:
            sorted_arr = list(percentages)  # Create a copy of percentages using list()
            bubble_sort(sorted_arr)
            print("Percentages sorted using Bubble Sort:", sorted_arr)
            display_top_five(sorted_arr)
        elif choice == 3:
            print("Exiting program. Goodbye!")
            break
        else:
            print("Invalid choice! Please select a valid option.")

# Run the program
if __name__ == "__main__":
    main()
